install.packages("corHMM")
library(shiny)
install.packages("ape")
install.packages("ape")
install.packages("ape")
install.packages("paletteer")
install.packages("coda")
install.packages("shiny")
install.packages("shiny")
install.packages("bslib")
#devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
library(phytools)
install.packages("phytools")
install.packages("shinyjs")
install.packages("rhandsontable")
install.packages("shinyWidgets")
install.packages("corHMM")
install.packages("corHMM")
library(shiny)
library(bslib)
library(ape)
library(paletteer)
library(coda)
library(corHMM)
#devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
library(phytools)
library(shinyjs)
library(rhandsontable)
library(shinyWidgets)
install.packages("devtools")
remove.packages(phytools)
remove.packages('phytools')
devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
#devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
library(phytools)
#devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
library(phytools)
#devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
library(phytools)
devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
output$PhyloPlot <- renderPlot( height = heightDt  , width = widthDt,{
req(treeInput())
rawPhylo <- plot.phylo(treeInput(), show.tip.label = input$tipLabels[1],
cex = input$tipSize[1],use.edge.length = input$branchLength[1], type = input$plotType,
edge.width = 0.8,edge.color = 'grey40')
return(rawPhylo)
})
library(shiny)
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
runApp('Documents/Guane')
setwd("~/Documents/Guane/Server")
setwd("~/Documents/Guane")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tree <- read.tree('Documents/Guane/data/etheostoma_percina_chrono.tre.txt')
tree <- read.tree('data/etheostoma_percina_chrono.tre')
tree <- read.tree('data/etheostoma_percina_chrono.tre.txt')
is.ultrametric()
is.ultrametric(tree)
tree
tree$edge.length
tree$edge.length <- round(tree$edge.length, 3)
is.ultrametric(tree)
saveRDS(tree, "Documents/Guane/data/ExampleDiver")
saveRDS(tree, "data/ExampleDiver")
is.ultrametric(tree)
runApp()
selectInput(inputId = 'frcUltButtDiverDT', label = 'Force ultrametricity',choices = c('Select' == 'selectDiverDT', 'Round decimals' == 'rounddiverDT', 'Chronos dating' == 'chronosDiverDt') )
runApp()
runApp()
updateSelectInput(session = 'frcUltButtDiverDT', label = 'Force ultrametricity', c('Select' == 'selectDiverDT', 'Round decimals' == 'rounddiverDT', 'Chronos dating' == 'chronosDiverDt'))
runApp()
observeEvent(ultrametricDiverDT()  ,{
if(ultrametricDiverDT() == F){
output$forceultrDiverDT <- renderUI({
selectInput(inputId = 'frcUltButtDiverDT', label = 'Force ultrametricity',choices = NULL )
})
updateSelectInput(session = 'frcUltButtDiverDT', label = 'Force ultrametricity', c('Select' == 'selectDiverDT', 'Round decimals' == 'rounddiverDT', 'Chronos dating' == 'chronosDiverDt'))
}
})
runApp()
runApp()
observeEvent(ultrametricDiverDT() == F,{
output$forceultrDiverDT <- renderUI({
selectInput(inputId = 'frcUltButtDiverDT', label = 'Force ultrametricity',choices =
choices = c('Select' == 'selectDiverDT', 'Round decimals' == 'rounddiverDT', 'Chronos dating' == 'chronosDiverDt') )
runApp()
runApp()
shiny::runApp()
llibrary(phytools)
read.tree('data/etheostoma_percina_chrono.tre.txt')
tree <- read.tree('data/etheostoma_percina_chrono.tre.txt')
darter.ltt<-ltt(tree,plot=FALSE)
plot(darter.ltt,axes=FALSE,log.lineages=FALSE,
xlab="time (mybp)")
axis(2,las=2,cex.axis=0.8)
labs<-axTicks(1)
h<-max(nodeHeights(darter.tree))
at<-h-labs
darter.tree <- read.tree('data/etheostoma_percina_chrono.tre.txt')
darter.ltt<-ltt(tree,plot=FALSE)
darter.ltt<-ltt(darter.tree,plot=FALSE)
plot(darter.ltt,axes=FALSE,log.lineages=FALSE,
xlab="time (mybp)")
axis(2,las=2,cex.axis=0.8)
labs<-axTicks(1)
h<-max(nodeHeights(darter.tree))
at<-h-labs
axis(1,at=at,labels=labs,cex.axis=0.8)
clip(x1=0,x2=h,y1=0,
y2=Ntip(darter.tree))
grid()
print(darter.ltt)
darter.tree<-multi2di(darter.tree)
darter.tree<-multi2di(darter.tree)
darter.ltt<-ltt(darter.tree,plot=FALSE)
darter.ltt
darter.mccr<-mccr(darter.ltt,rho=201/216,
nsim=500)
darter.mccr
par(mar=c(5.1,4.1,2.1,2.1))
plot(darter.mccr,main="",las=1,cex.axis=0.8)
bd.model<-fit.bd(darter.tree)
runApp()
data(bird.families)
is.binary(bird.families)
is.binary(multi2di(bird.families))
multi2di(bird.families)
di2multi(multi2di(bird.families))
all.equal(di2multi(multi2di(bird.families)), bird.families)
runApp()
runApp()
runApp()
library(shiny)
library(bslib)
library(ape)
library(paletteer)
library(coda)
library(corHMM)
#devtools::install_github(repo = 'https://github.com/liamrevell/phytools',force = TRUE)
library(phytools)
library(shinyjs)
library(rhandsontable)
library(shinyWidgets)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
darter.tree <- read.tree('data/etheostoma_percina_chrono.tre.txt')
darter.ltt<-ltt(darter.tree,plot=FALSE)
plot(darter.ltt,axes=FALSE,log.lineages=FALSE,
xlab="time (mybp)")
axis(2,las=2,cex.axis=0.8)
labs<-axTicks(1)
h<-max(nodeHeights(darter.tree))
at<-h-labs
axis(1,at=at,labels=labs,cex.axis=0.8)
clip(x1=0,x2=h,y1=0,
y2=Ntip(darter.tree))
grid()
runApp()
runApp()
darter.tree
darter.tree
nodeHeights(darter.tree)
max(nodeHeights(darter.tree))
runApp()
darter.ltt<-ltt(darter.tree,plot=FALSE)
plot(darter.ltt,axes=FALSE,log.lineages=FALSE,
xlab="time (mybp)")
axis(2,las=2,cex.axis=0.8)
labs<-axTicks(1)
h<-max(nodeHeights(darter.tree))
at<-h-labs
axis(1,at=at,labels=labs,cex.axis=0.8)
clip(x1=0,x2=h,y1=0,
y2=Ntip(darter.tree))
grid()
runApp()
runApp()
darter.mccr
