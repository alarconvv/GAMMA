p
p <-plot(NA,xlim = xlim, ylim = ylim,bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
p
str(p)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = xlim, ylim = ylim,bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0.5))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = ylim, cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0.5))
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = ylim, cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.5, 0.5))
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = ylim, cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
ylim
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = c(ylim[1]-05,ylim[2]+05), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = c(ylim[1]-0.5,ylim[2]+0.5), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = c(ylim[1]-0.5,ylim[2]*1.1), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
ylim[2]
ylim[2]*1.1
ylim[2]*1.0.5
ylim[2]*1.05
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = c(ylim[1]-0.5,ylim[2]*1.05), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
ylim[1]
ylim[1]*1.05
-ylim[1]*1.05
ylim[1]*-1.05
ylim[1]*(-1.05)
ylim[2]*1.05
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = xlim, ylim = c(ylim[1]-0.5,ylim[2]*1.05), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = c(xlim[1]-0.5,xlim[2]*1.05), ylim = c(ylim[1]-0.5,ylim[2]*1.05), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
h <- hist(x =  mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.5,xlim[2]*1.05), ylim = c(ylim[1]-0.5,ylim[2]*1.05),,bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0.5))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5,ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0.5))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5,xlim= c(xlim[1]-0.05,xlim[2]*1.05), lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5,xlim= c(xlim[1]-0.05,xlim[2]*1.05), lwd.ticks = .5,mgp = c(3, 1, 0))
c(xlim[1]-0.05,xlim[2]*1.05)
runApp()
runApp(launch.browser = T)
logLik.corhmm <- function(object,...){
lik<-object$loglik
attr(lik,"df")<-max(object$index.mat,na.rm=TRUE)
lik
}
AICc<-function(object,...){
aicc<-object$AICc
}
foo<-function(object){
setNames(c(attributes(logLik.corhmm(object))$df,logLik.corhmm(object),AIC(object),AICc(object)),
c("df","logLik","AIC","AICc"))
}
SppData<-data.frame(Genus_sp=names(mode),x=mode)
AncDiscMl<-list()
AncDiscMl$outcorHMM<-list()
AncDiscMl$outcorHMM$ER <- corHMM(tree,SppData,node.states=2,
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2),root.p=c(0.5,0.5))}
AncDiscMl$outcorHMM$ER <- corHMM(tree,SppData,node.states=2,
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2),root.p=c(0.5,0.5))
AncDiscMl$outcorHMM$ARD <- corHMM(tree,SppData,node.states=2,
rate.cat=1,rate.mat=matrix(c(NA,1,2,NA),2,2),root.p=c(0.5,0.5))
AncDiscMl$outcorHMM
AncDiscMl$outcorHMM$ER <- corHMM(tree,SppData,node.states='maginal',
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2),root.p=c(0.5,0.5))
AncDiscMl$outcorHMM$ARD <- corHMM(tree,SppData,node.states='maginal',
rate.cat=1,rate.mat=matrix(c(NA,1,2,NA),2,2),root.p=c(0.5,0.5))
AncDiscMl$outcorHMM$ER
AncDiscMl$outcorHMM$ER <- corHMM(tree,SppData,node.states="marginal",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2),root.p=c(0.5,0.5))
SppData<-data.frame(Genus_sp=names(mode),x=mode)
mode <- setNames(data$Simul2,row.names(data))
SppData<-data.frame(Genus_sp=names(mode),x=mode)
AncDiscMl$outcorHMM$ER <- corHMM(tree,SppData,node.states="marginal",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2),root.p=c(0.5,0.5))
AncDiscMl$outcorHMM$ARD <- corHMM(tree,SppData,node.states="marginal",
rate.cat=1,rate.mat=matrix(c(NA,1,2,NA),2,2),root.p=c(0.5,0.5))
logLik.corhmm <- function(object,...){
lik<-object$loglik
attr(lik,"df")<-max(object$index.mat,na.rm=TRUE)
lik
}
AICc<-function(object,...){
aicc<-object$AICc
}
foo<-function(object){
setNames(c(attributes(logLik.corhmm(object))$df,logLik.corhmm(object),AIC(object),AICc(object)),
c("df","logLik","AIC","AICc"))
}
AncDiscMl$AICdf<-as.data.frame(t(sapply(AncDiscMl$outcorHMM,foo)))
AncDiscMl$outcorHMM$ARD$index.mat
AncDiscMl$outcorHMM$ARD
runApp()
runApp()
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
mode <- setNames(data$SVL,row.names(data))
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5,ylim[2]*1.05), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
h <- hist(x =  mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5,xlim= c(xlim[1]-0.05,xlim[2]*1.05), lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5,xlim= c(xlim[1]-0.05,xlim[2]*1.05), lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,ylim = c(ylim[1]-0.5, ylim[2]*1.05),lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
c(xlim[1]-0.05,xlim[2]*1.05)
plot(NA,bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
q <-qqnorm(y = mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(q$x)
ylim <- range(q$y)
plot(q$x, q$y, yaxs = "i", xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5,ylim[2]*1.05), cex=1.2,
type = 'p',axes = F,main = 'Normal Q-Q Plot: PIC', sub = NULL, xlab = 'Theoretical Quantiles', ylab = 'PIC Quantiles',
col=make.transparent(color1[1], 0.8),pch=21,bg=make.transparent(color1[1], 0.2))
abline(lm(q$y ~ q$x),lwd= 0.8, col=make.transparent(color1[2], 0.8))
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0.5))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1.3, 0.5))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
h <- hist(x =  mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = c(xlim[1]-0.05,xlim[2]*1.05), ylim = c(ylim[1]-0.5, ylim[2]*1.05),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
plot(NA,xlim = xlim, ylim = c(0, ylim[2]*1.1),bty = "n",  las = 1,axes = F,yaxs='i',
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
h <- hist(x =  mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = xlim, ylim = c(0, ylim[2]*1.1),bty = "n",  las = 1,axes = F,
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0.5))
h <- hist(x =  mode,plot=F)
par(adj=0.5,
cex.axis=0.9,
cex.lab= 1,
cex.main= 1.2,
family="sans")
xlim <- range(h$mids)
ylim <- range(h$counts)
plot(NA,xlim = xlim, ylim = c(0, ylim[2]*1.1),bty = "n",  las = 1,axes = F,
main= 'Histogram: Phylogenetic Independent Contrasts', sub = NULL,
xlab= 'input$dataVar', ylab= ' N Tips' )
grid( lty = 2, lwd = 0.3)
axis(side = 1, lwd=0.5, lwd.ticks = .5,mgp = c(3, 1, 0))
axis(side = 2, lwd=0.5,lwd.ticks = .5,las = 2, mgp = c(3, 1, 0.5))
hist(x = mode, add = TRUE,
col=make.transparent(color1[1], 0.5), border= make.transparent(color1[1], 0.8) )
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plotTree.datamatrix
plotTree
mode <- setNames(data$Simul2,row.names(data))
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd = 0.8)
DisColPal <- paletteer::paletteer_c("grDevices::Purple-Yellow", length(levels(SelectedVarDisc())))
DisCols <- setNames(DisColPal,levels(SelectedVarDisc()))
DisColPal <- paletteer::paletteer_c("grDevices::Purple-Yellow", length(levels(mode)))
DisCols <- setNames(DisColPal,levels(mode))
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd = 0.8)
legend('topright',legend = levels(mode),pch = 22,pt.cex=1.5, pt.bg = DisCols, bty='n',cex = 0.8)
nodelabels(pie=pieDiscML,piecol=DisCols,cex=0.5)
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd = 1)
legend('topright',legend = levels(mode),pch = 22,pt.cex=1.5, pt.bg = DisCols, bty='n',cex = 0.8)
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd = 2)
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,edge.width=0.8)
plotTree
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd=3)
plotTree.datamatrix(tree,as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd=3)
plotTree.datamatrix(tree = tree,X = as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd=3,pts=3)
AncDiscMl$outcorHMM
pieDiscML <- AncDiscMl$outcorHMM[[Dimod[1]]]$states
pieDiscML <- AncDiscMl$outcorHMM[[1]]$states
pieDiscML
pieDiscML <- AncDiscMl$outcorHMM[[1]]$states
DisColPal <- paletteer::paletteer_c("grDevices::Purple-Yellow", length(levels(mode)))
DisCols <- setNames(DisColPal,levels(mode))
plotTree.datamatrix(tree = tree,X = as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd=3,pts=3)
legend('topright',legend = levels(mode),pch = 22,pt.cex=1.5, pt.bg = DisCols, bty='n',cex = 0.8)
nodelabels(pie=pieDiscML,piecol=DisCols,cex=0.5)
runApp()
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
plotTree
plotTree.datamatrix
fix(plotTree.datamatrix)
plotTree.datamatrix(tree = tree,X = as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd=3,pts=3)
fix(plotTree.datamatrix)
plotTree.datamatrix(tree = tree,X = as.data.frame(mode),colors=list(DisCols),header=FALSE,fsize=0.5,lwd=3,pts=3)
runApp()
anc.ML
phytools:::anc.EB
